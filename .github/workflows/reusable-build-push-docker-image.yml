name: Reusable Docker build and push workflow

on:
  workflow_call:
   inputs:
      dockerfile:
        required: true
        type: string
      image_name:
          required: true
          type: string

jobs:
  evaluate-environment:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.set-env.outputs.environment }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Evaluate environment value
        id: set-env
        run: |
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "ENVIRONMENT=prod" >> $GITHUB_ENV
            echo "::set-output name=environment::prod"
          else
            echo "ENVIRONMENT=dev" >> $GITHUB_ENV
            echo "::set-output name=environment::dev"
          fi
      - name: Print environment value
        run: echo "Environment is $ENVIRONMENT"

  docker-build-push:
    runs-on: ubuntu-latest
    needs: evaluate-environment
    env:
      ENVIRONMENT: ${{ needs.evaluate-environment.outputs.environment }}

    environment:
      name: ${{ needs.evaluate-environment.outputs.environment }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Get secrets from Azure Key Vault
        id: get-secrets
        uses: azure/get-keyvault-secrets@v1
        with:
          keyvault: ${{ secrets.AZURE_KEYVAULT_NAME }}
          secrets: |
              AZURE-CONTAINER-REGISTRY
              AZURE-CONTAINER-REGISTRY-USER-NAME
              AZURE-CONTAINER-REGISTRY-PASSWORD

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          registry: ${{ steps.get-secrets.outputs.AZURE-CONTAINER-REGISTRY }}
          username: ${{ steps.get-secrets.outputs.AZURE-CONTAINER-REGISTRY-USER-NAME }}
          password: ${{ steps.get-secrets.outputs.AZURE-CONTAINER-REGISTRY-PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set Docker tags
        id: docker-tags
        run: |
          echo "LATEST_TAG=${{ steps.get-secrets.outputs.AZURE_CONTAINER_REGISTRY }}/${{ inputs.image_name }}:latest" >> $GITHUB_ENV
          echo "VERSION_TAG=${{ steps.get-secrets.outputs.AZURE_CONTAINER_REGISTRY }}/${{ inputs.image_name }}:${{ github.run_number }}" >> $GITHUB_ENV


      - name: Build Docker Image and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ inputs.dockerfile }}
          push: true
          tags: |
            ${{ env.LATEST_TAG }}
            ${{ env.VERSION_TAG }}
